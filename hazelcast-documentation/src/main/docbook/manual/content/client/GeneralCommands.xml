<?xml version='1.0' encoding='UTF-8'?>
<!--
  ~ Copyright (c) 2008-2013, Hazelcast, Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sect1 xml:id="GeneralCommands" version='5.0' xmlns='http://docbook.org/ns/docbook'
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
       http://www.w3.org/1999/xlink http://www.w3.org/1999/xlink.xsd">
    <title>General Commands</title>
    AUTH, OK, ERROR, INSTANCES, MEMBERS, MEMBERLISTEN, CLUSTERTIME, PARTITIONS, MIGRATIONLISTEN, TRXCOMMIT, TRXROLLBACK, TRXBEGIN, PING

    <sect2 xml:id="AUTH" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>AUTH</title>

        <para>
            Hazelcast requires every client to authenticate for each connection. AUTH must be the very first command
            sent to server.
            Otherwise server will close the connection to the client. After the authentication is OK, server will
            keep the connection as authenticated and all the preceding commands will be processed.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
            AUTH <username> <password>
        ]]></programlisting>


        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK
        ]]></programlisting>

        <para>or</para>

        <programlisting language="java"><![CDATA[
        ERROR
        ]]></programlisting>

    </sect2>

    <sect2 xml:id="DESTROY" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>DESTROY</title>

        <para>
            Destroys this instance cluster-wide.
            Clears and releases all resources for this instance.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        DESTROY <type> <name>
        ]]></programlisting>

        <para>
            type can be: map, queue, list, set, atomic_number, topic, lock, multimap,
            idgen, semaphore, count_down_latch
        </para>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK
            ]]></programlisting>
    </sect2>

    <sect2 xml:id="TRXBEGIN" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>TRXBEGIN</title>

        <para>
            Starts the transaction. All subsequent commands will be queued until commit or rollback is sent.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        TRXBEGIN
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK
            ]]></programlisting>
    </sect2>

    <sect2 xml:id="TRXCOMMIT" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>TRXCOMMIT</title>

        <para>
            Commits the transaction.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        TRXCOMMIT
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK
            ]]></programlisting>
    </sect2>

    <sect2 xml:id="TRXROLLBACK" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>TRXROLLBACK</title>

        <para>
            Commits the transaction.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        TRXROLLBACK
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK
            ]]></programlisting>
    </sect2>

    <sect2 xml:id="INSTANCES" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>INSTANCES</title>

        <para>
            Returns all queue, map, set, list, topic, lock, multimap
            instances created by Hazelcast.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        INSTANCES
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK <type> <instanceN> ... <type> <instanceN>
            ]]></programlisting>
    </sect2>

    <sect2 xml:id="MEMBERLISTEN" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>MEMBERLISTEN</title>

        <para>
            Adds a membership listener. Listener will get notified
            for the member added and removed events.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        MEMBERLISTEN
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <para>
            After adding the listener. The following events will be received from the server.
        </para>

        <para>
            <emphasis role="bold">EVENT:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        EVENT <eventType> <hostname> <port>
            ]]></programlisting>
        <para>
            eventType is one of the following: ADDED, REMOVED.
        </para>
    </sect2>

    <sect2 xml:id="MIGRATIONLISTEN" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>MIGRATIONLISTEN</title>

        <para>
            Adds a migration listener. Listener will get notified
            when the migration STARTED, COMPLETED or FAILED.  
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        MIGRATIONLISTEN
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <para>
            After adding the listener. The following events will be received from the server.
        </para>

        <para>
            <emphasis role="bold">EVENT:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        EVENT <partition_id> <old hostname> <old port> <new hostname> <new port> <status>
            ]]></programlisting>
        <para>
            status is one of the following: STARTED, COMPLETED, FAILED.
        </para>
    </sect2>

    <sect2 xml:id="MEMBERS" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>MEMBERS</title>

        <para>
            Set of current members of the cluster.
            Every member in the cluster has the same member list in the same
            order. First member is the oldest member.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        MEMBERS
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK <member1 hostname> <member1 port> ... <memberN hostname> <memberN port>
            ]]></programlisting>
    </sect2>

    <sect2 xml:id="CLUSTERTIME" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>CLUSTERTIME</title>

        <para>
            Returns the cluster-wide time.

            Cluster tries to keep a cluster-wide time which is
            might be different than the member's own system time.
            Cluster-wide time is -almost- the same on all members
            of the cluster.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        CLUSTERTIME
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK <time>
            ]]></programlisting>
    </sect2>

    <sect2 xml:id="PING" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>PING</title>

        <para>
            Pings the cluster. Will return OK.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
        PING
        ]]></programlisting>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <programlisting language="java"><![CDATA[
        OK
            ]]></programlisting>
    </sect2>

    <sect2 xml:id="PARTITIONS" version="5.0" xmlns="http://docbook.org/ns/docbook">
        <title>PARTITIONS</title>

        <para>
            Returns the partition information.
        </para>

        <para>
            <emphasis role="bold">COMMAND:</emphasis>
        </para>

        <programlisting language="java"><![CDATA[
            PARTITONS #1
            <size of key in bytes>
            <key in bytes>
        ]]></programlisting>

        <para>
            The key is optional. If if it provided server will return only the partition that the key falls.
            Otherwise it will return all partitions as a pair of partition id and member address that owns the
            partition.
        </para>

        <para>
            <emphasis role="bold">Return value:</emphasis>
        </para>
        <para>If key is provided:</para>
        <programlisting language="java"><![CDATA[
        OK <pid> <hostname> <port>
            ]]></programlisting>


        <para>If key is not provided to command:</para>
        <programlisting language="java"><![CDATA[
        OK <pid1> <hostname1> <port1> ... <pid271> <hostname271> <port271>
            ]]></programlisting>

        <para>
            Note that 271 is the default partition count which can be changed on server configuration.
        </para>
    </sect2>
</sect1>
